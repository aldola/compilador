Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: functions LET declarations IN $@1 commands END

    3 functions: /* empty */
    4          | function
    5          | procedure

    6 $@2: /* empty */

    7 procedure: Procedure id_proc '(' declarations ')' $@2 LET declarations DO commands END

    8 function: Function id_funct '(' declarations ')' LET declarations DO commands END

    9 id_proc: IDENTIFIER

   10 id_funct: IDENTIFIER

   11 declarations: /* empty */
   12             | INTEGER id_seq IDENTIFIER '.'

   13 id_seq: /* empty */
   14       | id_seq IDENTIFIER ','

   15 commands: /* empty */
   16         | commands command ';'

   17 command: SKIP
   18        | READ IDENTIFIER
   19        | WRITE exp
   20        | IDENTIFIER ASSGNOP exp

   21 $@3: /* empty */

   22 $@4: /* empty */

   23 $@5: /* empty */

   24 command: IF bool_exp $@3 THEN commands $@4 ELSE $@5 commands FI

   25 $@6: /* empty */

   26 $@7: /* empty */

   27 command: WHILE $@6 bool_exp $@7 DO commands END

   28 bool_exp: exp '<' exp
   29         | exp '=' exp
   30         | exp '>' exp

   31 exp: NUMBER
   32    | IDENTIFIER
   33    | exp '+' exp
   34    | exp '-' exp
   35    | exp '*' exp
   36    | exp '/' exp
   37    | exp '^' exp
   38    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 8 38
')' (41) 7 8 38
'*' (42) 35
'+' (43) 33
',' (44) 14
'-' (45) 34
'.' (46) 12
'/' (47) 36
';' (59) 16
'<' (60) 28
'=' (61) 29
'>' (62) 30
'^' (94) 37
error (256)
NUMBER (258) 31
IDENTIFIER (259) 9 10 12 14 18 20 32
IF (260) 24
WHILE (261) 27
SKIP (262) 17
THEN (263) 24
ELSE (264) 24
FI (265) 24
DO (266) 7 8 27
END (267) 2 7 8 27
INTEGER (268) 12
READ (269) 18
WRITE (270) 19
LET (271) 2 7 8
IN (272) 2
Procedure (273) 7
Function (274) 8
ASSGNOP (275) 20


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 2, on right: 0
$@1 (36)
    on left: 1, on right: 2
functions (37)
    on left: 3 4 5, on right: 2
procedure (38)
    on left: 7, on right: 5
$@2 (39)
    on left: 6, on right: 7
function (40)
    on left: 8, on right: 4
id_proc (41)
    on left: 9, on right: 7
id_funct (42)
    on left: 10, on right: 8
declarations (43)
    on left: 11 12, on right: 2 7 8
id_seq (44)
    on left: 13 14, on right: 12 14
commands (45)
    on left: 15 16, on right: 2 7 8 16 24 27
command (46)
    on left: 17 18 19 20 24 27, on right: 16
$@3 (47)
    on left: 21, on right: 24
$@4 (48)
    on left: 22, on right: 24
$@5 (49)
    on left: 23, on right: 24
$@6 (50)
    on left: 25, on right: 27
$@7 (51)
    on left: 26, on right: 27
bool_exp (52)
    on left: 28 29 30, on right: 24 27
exp (53)
    on left: 31 32 33 34 35 36 37 38, on right: 19 20 28 29 30 33 34
    35 36 37 38


State 0

    0 $accept: . program $end

    Procedure  shift, and go to state 1
    Function   shift, and go to state 2

    $default  reduce using rule 3 (functions)

    program    go to state 3
    functions  go to state 4
    procedure  go to state 5
    function   go to state 6


State 1

    7 procedure: Procedure . id_proc '(' declarations ')' $@2 LET declarations DO commands END

    IDENTIFIER  shift, and go to state 7

    id_proc  go to state 8


State 2

    8 function: Function . id_funct '(' declarations ')' LET declarations DO commands END

    IDENTIFIER  shift, and go to state 9

    id_funct  go to state 10


State 3

    0 $accept: program . $end

    $end  shift, and go to state 11


State 4

    2 program: functions . LET declarations IN $@1 commands END

    LET  shift, and go to state 12


State 5

    5 functions: procedure .

    $default  reduce using rule 5 (functions)


State 6

    4 functions: function .

    $default  reduce using rule 4 (functions)


State 7

    9 id_proc: IDENTIFIER .

    $default  reduce using rule 9 (id_proc)


State 8

    7 procedure: Procedure id_proc . '(' declarations ')' $@2 LET declarations DO commands END

    '('  shift, and go to state 13


State 9

   10 id_funct: IDENTIFIER .

    $default  reduce using rule 10 (id_funct)


State 10

    8 function: Function id_funct . '(' declarations ')' LET declarations DO commands END

    '('  shift, and go to state 14


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 program: functions LET . declarations IN $@1 commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 11 (declarations)

    declarations  go to state 16


State 13

    7 procedure: Procedure id_proc '(' . declarations ')' $@2 LET declarations DO commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 11 (declarations)

    declarations  go to state 17


State 14

    8 function: Function id_funct '(' . declarations ')' LET declarations DO commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 11 (declarations)

    declarations  go to state 18


State 15

   12 declarations: INTEGER . id_seq IDENTIFIER '.'

    $default  reduce using rule 13 (id_seq)

    id_seq  go to state 19


State 16

    2 program: functions LET declarations . IN $@1 commands END

    IN  shift, and go to state 20


State 17

    7 procedure: Procedure id_proc '(' declarations . ')' $@2 LET declarations DO commands END

    ')'  shift, and go to state 21


State 18

    8 function: Function id_funct '(' declarations . ')' LET declarations DO commands END

    ')'  shift, and go to state 22


State 19

   12 declarations: INTEGER id_seq . IDENTIFIER '.'
   14 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 23


State 20

    2 program: functions LET declarations IN . $@1 commands END

    $default  reduce using rule 1 ($@1)

    $@1  go to state 24


State 21

    7 procedure: Procedure id_proc '(' declarations ')' . $@2 LET declarations DO commands END

    $default  reduce using rule 6 ($@2)

    $@2  go to state 25


State 22

    8 function: Function id_funct '(' declarations ')' . LET declarations DO commands END

    LET  shift, and go to state 26


State 23

   12 declarations: INTEGER id_seq IDENTIFIER . '.'
   14 id_seq: id_seq IDENTIFIER . ','

    '.'  shift, and go to state 27
    ','  shift, and go to state 28


State 24

    2 program: functions LET declarations IN $@1 . commands END

    $default  reduce using rule 15 (commands)

    commands  go to state 29


State 25

    7 procedure: Procedure id_proc '(' declarations ')' $@2 . LET declarations DO commands END

    LET  shift, and go to state 30


State 26

    8 function: Function id_funct '(' declarations ')' LET . declarations DO commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 11 (declarations)

    declarations  go to state 31


State 27

   12 declarations: INTEGER id_seq IDENTIFIER '.' .

    $default  reduce using rule 12 (declarations)


State 28

   14 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 14 (id_seq)


State 29

    2 program: functions LET declarations IN $@1 commands . END
   16 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    END         shift, and go to state 36
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 30

    7 procedure: Procedure id_proc '(' declarations ')' $@2 LET . declarations DO commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 11 (declarations)

    declarations  go to state 40


State 31

    8 function: Function id_funct '(' declarations ')' LET declarations . DO commands END

    DO  shift, and go to state 41


State 32

   20 command: IDENTIFIER . ASSGNOP exp

    ASSGNOP  shift, and go to state 42


State 33

   24 command: IF . bool_exp $@3 THEN commands $@4 ELSE $@5 commands FI

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    bool_exp  go to state 46
    exp       go to state 47


State 34

   27 command: WHILE . $@6 bool_exp $@7 DO commands END

    $default  reduce using rule 25 ($@6)

    $@6  go to state 48


State 35

   17 command: SKIP .

    $default  reduce using rule 17 (command)


State 36

    2 program: functions LET declarations IN $@1 commands END .

    $default  reduce using rule 2 (program)


State 37

   18 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


State 38

   19 command: WRITE . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 50


State 39

   16 commands: commands command . ';'

    ';'  shift, and go to state 51


State 40

    7 procedure: Procedure id_proc '(' declarations ')' $@2 LET declarations . DO commands END

    DO  shift, and go to state 52


State 41

    8 function: Function id_funct '(' declarations ')' LET declarations DO . commands END

    $default  reduce using rule 15 (commands)

    commands  go to state 53


State 42

   20 command: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 54


State 43

   31 exp: NUMBER .

    $default  reduce using rule 31 (exp)


State 44

   32 exp: IDENTIFIER .

    $default  reduce using rule 32 (exp)


State 45

   38 exp: '(' . exp ')'

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 55


State 46

   24 command: IF bool_exp . $@3 THEN commands $@4 ELSE $@5 commands FI

    $default  reduce using rule 21 ($@3)

    $@3  go to state 56


State 47

   28 bool_exp: exp . '<' exp
   29         | exp . '=' exp
   30         | exp . '>' exp
   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '='  shift, and go to state 63
    '>'  shift, and go to state 64


State 48

   27 command: WHILE $@6 . bool_exp $@7 DO commands END

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    bool_exp  go to state 65
    exp       go to state 47


State 49

   18 command: READ IDENTIFIER .

    $default  reduce using rule 18 (command)


State 50

   19 command: WRITE exp .
   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 19 (command)


State 51

   16 commands: commands command ';' .

    $default  reduce using rule 16 (commands)


State 52

    7 procedure: Procedure id_proc '(' declarations ')' $@2 LET declarations DO . commands END

    $default  reduce using rule 15 (commands)

    commands  go to state 66


State 53

    8 function: Function id_funct '(' declarations ')' LET declarations DO commands . END
   16 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    END         shift, and go to state 67
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 54

   20 command: IDENTIFIER ASSGNOP exp .
   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 20 (command)


State 55

   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp
   38    | '(' exp . ')'

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    ')'  shift, and go to state 68


State 56

   24 command: IF bool_exp $@3 . THEN commands $@4 ELSE $@5 commands FI

    THEN  shift, and go to state 69


State 57

   34 exp: exp '-' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 70


State 58

   33 exp: exp '+' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 71


State 59

   35 exp: exp '*' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 72


State 60

   36 exp: exp '/' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 73


State 61

   37 exp: exp '^' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 74


State 62

   28 bool_exp: exp '<' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 75


State 63

   29 bool_exp: exp '=' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 76


State 64

   30 bool_exp: exp '>' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 77


State 65

   27 command: WHILE $@6 bool_exp . $@7 DO commands END

    $default  reduce using rule 26 ($@7)

    $@7  go to state 78


State 66

    7 procedure: Procedure id_proc '(' declarations ')' $@2 LET declarations DO commands . END
   16 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    END         shift, and go to state 79
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 67

    8 function: Function id_funct '(' declarations ')' LET declarations DO commands END .

    $default  reduce using rule 8 (function)


State 68

   38 exp: '(' exp ')' .

    $default  reduce using rule 38 (exp)


State 69

   24 command: IF bool_exp $@3 THEN . commands $@4 ELSE $@5 commands FI

    $default  reduce using rule 15 (commands)

    commands  go to state 80


State 70

   33 exp: exp . '+' exp
   34    | exp . '-' exp
   34    | exp '-' exp .
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 34 (exp)


State 71

   33 exp: exp . '+' exp
   33    | exp '+' exp .
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 33 (exp)


State 72

   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   35    | exp '*' exp .
   36    | exp . '/' exp
   37    | exp . '^' exp

    '^'  shift, and go to state 61

    $default  reduce using rule 35 (exp)


State 73

   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   36    | exp '/' exp .
   37    | exp . '^' exp

    '^'  shift, and go to state 61

    $default  reduce using rule 36 (exp)


State 74

   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp
   37    | exp '^' exp .

    '^'  shift, and go to state 61

    $default  reduce using rule 37 (exp)


State 75

   28 bool_exp: exp '<' exp .
   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 28 (bool_exp)


State 76

   29 bool_exp: exp '=' exp .
   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 29 (bool_exp)


State 77

   30 bool_exp: exp '>' exp .
   33 exp: exp . '+' exp
   34    | exp . '-' exp
   35    | exp . '*' exp
   36    | exp . '/' exp
   37    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 30 (bool_exp)


State 78

   27 command: WHILE $@6 bool_exp $@7 . DO commands END

    DO  shift, and go to state 81


State 79

    7 procedure: Procedure id_proc '(' declarations ')' $@2 LET declarations DO commands END .

    $default  reduce using rule 7 (procedure)


State 80

   16 commands: commands . command ';'
   24 command: IF bool_exp $@3 THEN commands . $@4 ELSE $@5 commands FI

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    $default  reduce using rule 22 ($@4)

    command  go to state 39
    $@4      go to state 82


State 81

   27 command: WHILE $@6 bool_exp $@7 DO . commands END

    $default  reduce using rule 15 (commands)

    commands  go to state 83


State 82

   24 command: IF bool_exp $@3 THEN commands $@4 . ELSE $@5 commands FI

    ELSE  shift, and go to state 84


State 83

   16 commands: commands . command ';'
   27 command: WHILE $@6 bool_exp $@7 DO commands . END

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    END         shift, and go to state 85
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 84

   24 command: IF bool_exp $@3 THEN commands $@4 ELSE . $@5 commands FI

    $default  reduce using rule 23 ($@5)

    $@5  go to state 86


State 85

   27 command: WHILE $@6 bool_exp $@7 DO commands END .

    $default  reduce using rule 27 (command)


State 86

   24 command: IF bool_exp $@3 THEN commands $@4 ELSE $@5 . commands FI

    $default  reduce using rule 15 (commands)

    commands  go to state 87


State 87

   16 commands: commands . command ';'
   24 command: IF bool_exp $@3 THEN commands $@4 ELSE $@5 commands . FI

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    FI          shift, and go to state 88
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 88

   24 command: IF bool_exp $@3 THEN commands $@4 ELSE $@5 commands FI .

    $default  reduce using rule 24 (command)
