Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 $@3: /* empty */

    4 program: $@1 functions $@2 LET declarations IN $@3 commands END

    5 functions: /* empty */
    6          | function
    7          | procedure

    8 $@4: /* empty */

    9 $@5: /* empty */

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 DO commands END

   11 $@6: /* empty */

   12 $@7: /* empty */

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 DO commands END

   14 id_proc: IDENTIFIER

   15 id_funct: IDENTIFIER

   16 declarations: /* empty */
   17             | INTEGER id_seq IDENTIFIER '.'

   18 id_seq: /* empty */
   19       | id_seq IDENTIFIER ','

   20 commands: /* empty */
   21         | commands command ';'

   22 command: SKIP
   23        | READ IDENTIFIER
   24        | WRITE exp
   25        | IDENTIFIER ASSGNOP exp

   26 $@8: /* empty */

   27 $@9: /* empty */

   28 $@10: /* empty */

   29 command: IF bool_exp $@8 THEN commands $@9 ELSE $@10 commands FI

   30 $@11: /* empty */

   31 $@12: /* empty */

   32 command: WHILE $@11 bool_exp $@12 DO commands END
   33        | IDENTIFIER '(' variables ')'

   34 bool_exp: exp '<' exp
   35         | exp '=' exp
   36         | exp '>' exp

   37 variables: /* empty */
   38          | llist_exp exp '.'

   39 llist_exp: /* empty */
   40          | llist_exp exp ','

   41 exp: NUMBER
   42    | IDENTIFIER
   43    | exp '+' exp
   44    | exp '-' exp
   45    | exp '*' exp
   46    | exp '/' exp
   47    | exp '^' exp
   48    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 13 33 48
')' (41) 10 13 33 48
'*' (42) 45
'+' (43) 43
',' (44) 19 40
'-' (45) 44
'.' (46) 17 38
'/' (47) 46
';' (59) 21
'<' (60) 34
'=' (61) 35
'>' (62) 36
'^' (94) 47
error (256)
NUMBER (258) 41
IDENTIFIER (259) 14 15 17 19 23 25 33 42
IF (260) 29
WHILE (261) 32
SKIP (262) 22
THEN (263) 29
ELSE (264) 29
FI (265) 29
DO (266) 10 13 32
END (267) 4 10 13 32
INTEGER (268) 17
READ (269) 23
WRITE (270) 24
LET (271) 4 10 13
IN (272) 4
Procedure (273) 10
Function (274) 13
ASSGNOP (275) 25


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 4, on right: 0
$@1 (36)
    on left: 1, on right: 4
$@2 (37)
    on left: 2, on right: 4
$@3 (38)
    on left: 3, on right: 4
functions (39)
    on left: 5 6 7, on right: 4
procedure (40)
    on left: 10, on right: 7
$@4 (41)
    on left: 8, on right: 10
$@5 (42)
    on left: 9, on right: 10
function (43)
    on left: 13, on right: 6
$@6 (44)
    on left: 11, on right: 13
$@7 (45)
    on left: 12, on right: 13
id_proc (46)
    on left: 14, on right: 10
id_funct (47)
    on left: 15, on right: 13
declarations (48)
    on left: 16 17, on right: 4 10 13
id_seq (49)
    on left: 18 19, on right: 17 19
commands (50)
    on left: 20 21, on right: 4 10 13 21 29 32
command (51)
    on left: 22 23 24 25 29 32 33, on right: 21
$@8 (52)
    on left: 26, on right: 29
$@9 (53)
    on left: 27, on right: 29
$@10 (54)
    on left: 28, on right: 29
$@11 (55)
    on left: 30, on right: 32
$@12 (56)
    on left: 31, on right: 32
bool_exp (57)
    on left: 34 35 36, on right: 29 32
variables (58)
    on left: 37 38, on right: 33
llist_exp (59)
    on left: 39 40, on right: 38 40
exp (60)
    on left: 41 42 43 44 45 46 47 48, on right: 24 25 34 35 36 38 40
    43 44 45 46 47 48


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    4 program: $@1 . functions $@2 LET declarations IN $@3 commands END

    Procedure  shift, and go to state 4
    Function   shift, and go to state 5

    $default  reduce using rule 5 (functions)

    functions  go to state 6
    procedure  go to state 7
    function   go to state 8


state 3

    0 $accept: program $end .

    $default  accept


state 4

   10 procedure: Procedure . id_proc '(' declarations ')' $@4 LET declarations $@5 DO commands END

    IDENTIFIER  shift, and go to state 9

    id_proc  go to state 10


state 5

   13 function: Function . id_funct '(' declarations ')' $@6 LET declarations $@7 DO commands END

    IDENTIFIER  shift, and go to state 11

    id_funct  go to state 12


state 6

    4 program: $@1 functions . $@2 LET declarations IN $@3 commands END

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


state 7

    7 functions: procedure .

    $default  reduce using rule 7 (functions)


state 8

    6 functions: function .

    $default  reduce using rule 6 (functions)


state 9

   14 id_proc: IDENTIFIER .

    $default  reduce using rule 14 (id_proc)


state 10

   10 procedure: Procedure id_proc . '(' declarations ')' $@4 LET declarations $@5 DO commands END

    '('  shift, and go to state 14


state 11

   15 id_funct: IDENTIFIER .

    $default  reduce using rule 15 (id_funct)


state 12

   13 function: Function id_funct . '(' declarations ')' $@6 LET declarations $@7 DO commands END

    '('  shift, and go to state 15


state 13

    4 program: $@1 functions $@2 . LET declarations IN $@3 commands END

    LET  shift, and go to state 16


state 14

   10 procedure: Procedure id_proc '(' . declarations ')' $@4 LET declarations $@5 DO commands END

    INTEGER  shift, and go to state 17

    $default  reduce using rule 16 (declarations)

    declarations  go to state 18


state 15

   13 function: Function id_funct '(' . declarations ')' $@6 LET declarations $@7 DO commands END

    INTEGER  shift, and go to state 17

    $default  reduce using rule 16 (declarations)

    declarations  go to state 19


state 16

    4 program: $@1 functions $@2 LET . declarations IN $@3 commands END

    INTEGER  shift, and go to state 17

    $default  reduce using rule 16 (declarations)

    declarations  go to state 20


state 17

   17 declarations: INTEGER . id_seq IDENTIFIER '.'

    $default  reduce using rule 18 (id_seq)

    id_seq  go to state 21


state 18

   10 procedure: Procedure id_proc '(' declarations . ')' $@4 LET declarations $@5 DO commands END

    ')'  shift, and go to state 22


state 19

   13 function: Function id_funct '(' declarations . ')' $@6 LET declarations $@7 DO commands END

    ')'  shift, and go to state 23


state 20

    4 program: $@1 functions $@2 LET declarations . IN $@3 commands END

    IN  shift, and go to state 24


state 21

   17 declarations: INTEGER id_seq . IDENTIFIER '.'
   19 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 25


state 22

   10 procedure: Procedure id_proc '(' declarations ')' . $@4 LET declarations $@5 DO commands END

    $default  reduce using rule 8 ($@4)

    $@4  go to state 26


state 23

   13 function: Function id_funct '(' declarations ')' . $@6 LET declarations $@7 DO commands END

    $default  reduce using rule 11 ($@6)

    $@6  go to state 27


state 24

    4 program: $@1 functions $@2 LET declarations IN . $@3 commands END

    $default  reduce using rule 3 ($@3)

    $@3  go to state 28


state 25

   17 declarations: INTEGER id_seq IDENTIFIER . '.'
   19 id_seq: id_seq IDENTIFIER . ','

    '.'  shift, and go to state 29
    ','  shift, and go to state 30


state 26

   10 procedure: Procedure id_proc '(' declarations ')' $@4 . LET declarations $@5 DO commands END

    LET  shift, and go to state 31


state 27

   13 function: Function id_funct '(' declarations ')' $@6 . LET declarations $@7 DO commands END

    LET  shift, and go to state 32


state 28

    4 program: $@1 functions $@2 LET declarations IN $@3 . commands END

    $default  reduce using rule 20 (commands)

    commands  go to state 33


state 29

   17 declarations: INTEGER id_seq IDENTIFIER '.' .

    $default  reduce using rule 17 (declarations)


state 30

   19 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 19 (id_seq)


state 31

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET . declarations $@5 DO commands END

    INTEGER  shift, and go to state 17

    $default  reduce using rule 16 (declarations)

    declarations  go to state 34


state 32

   13 function: Function id_funct '(' declarations ')' $@6 LET . declarations $@7 DO commands END

    INTEGER  shift, and go to state 17

    $default  reduce using rule 16 (declarations)

    declarations  go to state 35


state 33

    4 program: $@1 functions $@2 LET declarations IN $@3 commands . END
   21 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    SKIP        shift, and go to state 39
    END         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42

    command  go to state 43


state 34

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations . $@5 DO commands END

    $default  reduce using rule 9 ($@5)

    $@5  go to state 44


state 35

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations . $@7 DO commands END

    $default  reduce using rule 12 ($@7)

    $@7  go to state 45


state 36

   25 command: IDENTIFIER . ASSGNOP exp
   33        | IDENTIFIER . '(' variables ')'

    ASSGNOP  shift, and go to state 46
    '('      shift, and go to state 47


state 37

   29 command: IF . bool_exp $@8 THEN commands $@9 ELSE $@10 commands FI

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    bool_exp  go to state 51
    exp       go to state 52


state 38

   32 command: WHILE . $@11 bool_exp $@12 DO commands END

    $default  reduce using rule 30 ($@11)

    $@11  go to state 53


state 39

   22 command: SKIP .

    $default  reduce using rule 22 (command)


state 40

    4 program: $@1 functions $@2 LET declarations IN $@3 commands END .

    $default  reduce using rule 4 (program)


state 41

   23 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 54


state 42

   24 command: WRITE . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 55


state 43

   21 commands: commands command . ';'

    ';'  shift, and go to state 56


state 44

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 . DO commands END

    DO  shift, and go to state 57


state 45

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 . DO commands END

    DO  shift, and go to state 58


state 46

   25 command: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 59


state 47

   33 command: IDENTIFIER '(' . variables ')'

    ')'       reduce using rule 37 (variables)
    $default  reduce using rule 39 (llist_exp)

    variables  go to state 60
    llist_exp  go to state 61


state 48

   41 exp: NUMBER .

    $default  reduce using rule 41 (exp)


state 49

   42 exp: IDENTIFIER .

    $default  reduce using rule 42 (exp)


state 50

   48 exp: '(' . exp ')'

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 62


state 51

   29 command: IF bool_exp . $@8 THEN commands $@9 ELSE $@10 commands FI

    $default  reduce using rule 26 ($@8)

    $@8  go to state 63


state 52

   34 bool_exp: exp . '<' exp
   35         | exp . '=' exp
   36         | exp . '>' exp
   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70
    '>'  shift, and go to state 71


state 53

   32 command: WHILE $@11 . bool_exp $@12 DO commands END

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    bool_exp  go to state 72
    exp       go to state 52


state 54

   23 command: READ IDENTIFIER .

    $default  reduce using rule 23 (command)


state 55

   24 command: WRITE exp .
   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68

    $default  reduce using rule 24 (command)


state 56

   21 commands: commands command ';' .

    $default  reduce using rule 21 (commands)


state 57

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 DO . commands END

    $default  reduce using rule 20 (commands)

    commands  go to state 73


state 58

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 DO . commands END

    $default  reduce using rule 20 (commands)

    commands  go to state 74


state 59

   25 command: IDENTIFIER ASSGNOP exp .
   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68

    $default  reduce using rule 25 (command)


state 60

   33 command: IDENTIFIER '(' variables . ')'

    ')'  shift, and go to state 75


state 61

   38 variables: llist_exp . exp '.'
   40 llist_exp: llist_exp . exp ','

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 76


state 62

   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp
   48    | '(' exp . ')'

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68
    ')'  shift, and go to state 77


state 63

   29 command: IF bool_exp $@8 . THEN commands $@9 ELSE $@10 commands FI

    THEN  shift, and go to state 78


state 64

   44 exp: exp '-' . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 79


state 65

   43 exp: exp '+' . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 80


state 66

   45 exp: exp '*' . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 81


state 67

   46 exp: exp '/' . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 82


state 68

   47 exp: exp '^' . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 83


state 69

   34 bool_exp: exp '<' . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 84


state 70

   35 bool_exp: exp '=' . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 85


state 71

   36 bool_exp: exp '>' . exp

    NUMBER      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    '('         shift, and go to state 50

    exp  go to state 86


state 72

   32 command: WHILE $@11 bool_exp . $@12 DO commands END

    $default  reduce using rule 31 ($@12)

    $@12  go to state 87


state 73

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 DO commands . END
   21 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    SKIP        shift, and go to state 39
    END         shift, and go to state 88
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42

    command  go to state 43


state 74

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 DO commands . END
   21 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    SKIP        shift, and go to state 39
    END         shift, and go to state 89
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42

    command  go to state 43


state 75

   33 command: IDENTIFIER '(' variables ')' .

    $default  reduce using rule 33 (command)


state 76

   38 variables: llist_exp exp . '.'
   40 llist_exp: llist_exp exp . ','
   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68
    '.'  shift, and go to state 90
    ','  shift, and go to state 91


state 77

   48 exp: '(' exp ')' .

    $default  reduce using rule 48 (exp)


state 78

   29 command: IF bool_exp $@8 THEN . commands $@9 ELSE $@10 commands FI

    $default  reduce using rule 20 (commands)

    commands  go to state 92


state 79

   43 exp: exp . '+' exp
   44    | exp . '-' exp
   44    | exp '-' exp .
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68

    $default  reduce using rule 44 (exp)


state 80

   43 exp: exp . '+' exp
   43    | exp '+' exp .
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68

    $default  reduce using rule 43 (exp)


state 81

   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   45    | exp '*' exp .
   46    | exp . '/' exp
   47    | exp . '^' exp

    '^'  shift, and go to state 68

    $default  reduce using rule 45 (exp)


state 82

   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   46    | exp '/' exp .
   47    | exp . '^' exp

    '^'  shift, and go to state 68

    $default  reduce using rule 46 (exp)


state 83

   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp
   47    | exp '^' exp .

    '^'  shift, and go to state 68

    $default  reduce using rule 47 (exp)


state 84

   34 bool_exp: exp '<' exp .
   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68

    $default  reduce using rule 34 (bool_exp)


state 85

   35 bool_exp: exp '=' exp .
   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68

    $default  reduce using rule 35 (bool_exp)


state 86

   36 bool_exp: exp '>' exp .
   43 exp: exp . '+' exp
   44    | exp . '-' exp
   45    | exp . '*' exp
   46    | exp . '/' exp
   47    | exp . '^' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '^'  shift, and go to state 68

    $default  reduce using rule 36 (bool_exp)


state 87

   32 command: WHILE $@11 bool_exp $@12 . DO commands END

    DO  shift, and go to state 93


state 88

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 DO commands END .

    $default  reduce using rule 10 (procedure)


state 89

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 DO commands END .

    $default  reduce using rule 13 (function)


state 90

   38 variables: llist_exp exp '.' .

    $default  reduce using rule 38 (variables)


state 91

   40 llist_exp: llist_exp exp ',' .

    $default  reduce using rule 40 (llist_exp)


state 92

   21 commands: commands . command ';'
   29 command: IF bool_exp $@8 THEN commands . $@9 ELSE $@10 commands FI

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    SKIP        shift, and go to state 39
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42

    $default  reduce using rule 27 ($@9)

    command  go to state 43
    $@9      go to state 94


state 93

   32 command: WHILE $@11 bool_exp $@12 DO . commands END

    $default  reduce using rule 20 (commands)

    commands  go to state 95


state 94

   29 command: IF bool_exp $@8 THEN commands $@9 . ELSE $@10 commands FI

    ELSE  shift, and go to state 96


state 95

   21 commands: commands . command ';'
   32 command: WHILE $@11 bool_exp $@12 DO commands . END

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    SKIP        shift, and go to state 39
    END         shift, and go to state 97
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42

    command  go to state 43


state 96

   29 command: IF bool_exp $@8 THEN commands $@9 ELSE . $@10 commands FI

    $default  reduce using rule 28 ($@10)

    $@10  go to state 98


state 97

   32 command: WHILE $@11 bool_exp $@12 DO commands END .

    $default  reduce using rule 32 (command)


state 98

   29 command: IF bool_exp $@8 THEN commands $@9 ELSE $@10 . commands FI

    $default  reduce using rule 20 (commands)

    commands  go to state 99


state 99

   21 commands: commands . command ';'
   29 command: IF bool_exp $@8 THEN commands $@9 ELSE $@10 commands . FI

    IDENTIFIER  shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    SKIP        shift, and go to state 39
    FI          shift, and go to state 100
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42

    command  go to state 43


state 100

   29 command: IF bool_exp $@8 THEN commands $@9 ELSE $@10 commands FI .

    $default  reduce using rule 29 (command)
