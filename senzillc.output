State 40 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 $@3: /* empty */

    4 program: $@1 functions $@2 LET declarations IN $@3 commands END

    5 functions: /* empty */
    6          | function
    7          | procedure

    8 $@4: /* empty */

    9 $@5: /* empty */

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 DO commands END

   11 $@6: /* empty */

   12 $@7: /* empty */

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 DO commands END

   14 id_proc: IDENTIFIER

   15 id_funct: IDENTIFIER

   16 declarations: /* empty */
   17             | INTEGER id_seq IDENTIFIER '.'
   18             | '(' id_seq IDENTIFIER ')'

   19 id_seq: /* empty */
   20       | id_seq IDENTIFIER ','

   21 commands: /* empty */
   22         | commands command ';'

   23 command: SKIP
   24        | READ IDENTIFIER
   25        | WRITE exp
   26        | IDENTIFIER ASSGNOP exp

   27 $@8: /* empty */

   28 $@9: /* empty */

   29 $@10: /* empty */

   30 command: IF bool_exp $@8 THEN commands $@9 ELSE $@10 commands FI

   31 $@11: /* empty */

   32 $@12: /* empty */

   33 command: WHILE $@11 bool_exp $@12 DO commands END
   34        | IDENTIFIER variables

   35 bool_exp: exp '<' exp
   36         | exp '=' exp
   37         | exp '>' exp

   38 variables: /* empty */
   39          | llist_exp exp '.'
   40          | '(' llist_exp exp ')'

   41 llist_exp: /* empty */
   42          | llist_exp exp ','

   43 exp: NUMBER
   44    | IDENTIFIER
   45    | exp '+' exp
   46    | exp '-' exp
   47    | exp '*' exp
   48    | exp '/' exp
   49    | exp '^' exp
   50    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 13 18 40 50
')' (41) 10 13 18 40 50
'*' (42) 47
'+' (43) 45
',' (44) 20 42
'-' (45) 46
'.' (46) 17 39
'/' (47) 48
';' (59) 22
'<' (60) 35
'=' (61) 36
'>' (62) 37
'^' (94) 49
error (256)
NUMBER (258) 43
IDENTIFIER (259) 14 15 17 18 20 24 26 34 44
IF (260) 30
WHILE (261) 33
SKIP (262) 23
THEN (263) 30
ELSE (264) 30
FI (265) 30
DO (266) 10 13 33
END (267) 4 10 13 33
INTEGER (268) 17
READ (269) 24
WRITE (270) 25
LET (271) 4 10 13
IN (272) 4
Procedure (273) 10
Function (274) 13
ASSGNOP (275) 26


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 4, on right: 0
$@1 (36)
    on left: 1, on right: 4
$@2 (37)
    on left: 2, on right: 4
$@3 (38)
    on left: 3, on right: 4
functions (39)
    on left: 5 6 7, on right: 4
procedure (40)
    on left: 10, on right: 7
$@4 (41)
    on left: 8, on right: 10
$@5 (42)
    on left: 9, on right: 10
function (43)
    on left: 13, on right: 6
$@6 (44)
    on left: 11, on right: 13
$@7 (45)
    on left: 12, on right: 13
id_proc (46)
    on left: 14, on right: 10
id_funct (47)
    on left: 15, on right: 13
declarations (48)
    on left: 16 17 18, on right: 4 10 13
id_seq (49)
    on left: 19 20, on right: 17 18 20
commands (50)
    on left: 21 22, on right: 4 10 13 22 30 33
command (51)
    on left: 23 24 25 26 30 33 34, on right: 22
$@8 (52)
    on left: 27, on right: 30
$@9 (53)
    on left: 28, on right: 30
$@10 (54)
    on left: 29, on right: 30
$@11 (55)
    on left: 31, on right: 33
$@12 (56)
    on left: 32, on right: 33
bool_exp (57)
    on left: 35 36 37, on right: 30 33
variables (58)
    on left: 38 39 40, on right: 34
llist_exp (59)
    on left: 41 42, on right: 39 40 42
exp (60)
    on left: 43 44 45 46 47 48 49 50, on right: 25 26 35 36 37 39 40
    42 45 46 47 48 49 50


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    4 program: $@1 . functions $@2 LET declarations IN $@3 commands END

    Procedure  shift, and go to state 4
    Function   shift, and go to state 5

    $default  reduce using rule 5 (functions)

    functions  go to state 6
    procedure  go to state 7
    function   go to state 8


state 3

    0 $accept: program $end .

    $default  accept


state 4

   10 procedure: Procedure . id_proc '(' declarations ')' $@4 LET declarations $@5 DO commands END

    IDENTIFIER  shift, and go to state 9

    id_proc  go to state 10


state 5

   13 function: Function . id_funct '(' declarations ')' $@6 LET declarations $@7 DO commands END

    IDENTIFIER  shift, and go to state 11

    id_funct  go to state 12


state 6

    4 program: $@1 functions . $@2 LET declarations IN $@3 commands END

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


state 7

    7 functions: procedure .

    $default  reduce using rule 7 (functions)


state 8

    6 functions: function .

    $default  reduce using rule 6 (functions)


state 9

   14 id_proc: IDENTIFIER .

    $default  reduce using rule 14 (id_proc)


state 10

   10 procedure: Procedure id_proc . '(' declarations ')' $@4 LET declarations $@5 DO commands END

    '('  shift, and go to state 14


state 11

   15 id_funct: IDENTIFIER .

    $default  reduce using rule 15 (id_funct)


state 12

   13 function: Function id_funct . '(' declarations ')' $@6 LET declarations $@7 DO commands END

    '('  shift, and go to state 15


state 13

    4 program: $@1 functions $@2 . LET declarations IN $@3 commands END

    LET  shift, and go to state 16


state 14

   10 procedure: Procedure id_proc '(' . declarations ')' $@4 LET declarations $@5 DO commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 16 (declarations)

    declarations  go to state 19


state 15

   13 function: Function id_funct '(' . declarations ')' $@6 LET declarations $@7 DO commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 16 (declarations)

    declarations  go to state 20


state 16

    4 program: $@1 functions $@2 LET . declarations IN $@3 commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 16 (declarations)

    declarations  go to state 21


state 17

   17 declarations: INTEGER . id_seq IDENTIFIER '.'

    $default  reduce using rule 19 (id_seq)

    id_seq  go to state 22


state 18

   18 declarations: '(' . id_seq IDENTIFIER ')'

    $default  reduce using rule 19 (id_seq)

    id_seq  go to state 23


state 19

   10 procedure: Procedure id_proc '(' declarations . ')' $@4 LET declarations $@5 DO commands END

    ')'  shift, and go to state 24


state 20

   13 function: Function id_funct '(' declarations . ')' $@6 LET declarations $@7 DO commands END

    ')'  shift, and go to state 25


state 21

    4 program: $@1 functions $@2 LET declarations . IN $@3 commands END

    IN  shift, and go to state 26


state 22

   17 declarations: INTEGER id_seq . IDENTIFIER '.'
   20 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 27


state 23

   18 declarations: '(' id_seq . IDENTIFIER ')'
   20 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 28


state 24

   10 procedure: Procedure id_proc '(' declarations ')' . $@4 LET declarations $@5 DO commands END

    $default  reduce using rule 8 ($@4)

    $@4  go to state 29


state 25

   13 function: Function id_funct '(' declarations ')' . $@6 LET declarations $@7 DO commands END

    $default  reduce using rule 11 ($@6)

    $@6  go to state 30


state 26

    4 program: $@1 functions $@2 LET declarations IN . $@3 commands END

    $default  reduce using rule 3 ($@3)

    $@3  go to state 31


state 27

   17 declarations: INTEGER id_seq IDENTIFIER . '.'
   20 id_seq: id_seq IDENTIFIER . ','

    '.'  shift, and go to state 32
    ','  shift, and go to state 33


state 28

   18 declarations: '(' id_seq IDENTIFIER . ')'
   20 id_seq: id_seq IDENTIFIER . ','

    ')'  shift, and go to state 34
    ','  shift, and go to state 33


state 29

   10 procedure: Procedure id_proc '(' declarations ')' $@4 . LET declarations $@5 DO commands END

    LET  shift, and go to state 35


state 30

   13 function: Function id_funct '(' declarations ')' $@6 . LET declarations $@7 DO commands END

    LET  shift, and go to state 36


state 31

    4 program: $@1 functions $@2 LET declarations IN $@3 . commands END

    $default  reduce using rule 21 (commands)

    commands  go to state 37


state 32

   17 declarations: INTEGER id_seq IDENTIFIER '.' .

    $default  reduce using rule 17 (declarations)


state 33

   20 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 20 (id_seq)


state 34

   18 declarations: '(' id_seq IDENTIFIER ')' .

    $default  reduce using rule 18 (declarations)


state 35

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET . declarations $@5 DO commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 16 (declarations)

    declarations  go to state 38


state 36

   13 function: Function id_funct '(' declarations ')' $@6 LET . declarations $@7 DO commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 16 (declarations)

    declarations  go to state 39


state 37

    4 program: $@1 functions $@2 LET declarations IN $@3 commands . END
   22 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    SKIP        shift, and go to state 43
    END         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46

    command  go to state 47


state 38

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations . $@5 DO commands END

    $default  reduce using rule 9 ($@5)

    $@5  go to state 48


state 39

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations . $@7 DO commands END

    $default  reduce using rule 12 ($@7)

    $@7  go to state 49


state 40

   26 command: IDENTIFIER . ASSGNOP exp
   34        | IDENTIFIER . variables

    ASSGNOP  shift, and go to state 50
    '('      shift, and go to state 51

    '('       [reduce using rule 41 (llist_exp)]
    ';'       reduce using rule 38 (variables)
    $default  reduce using rule 41 (llist_exp)

    variables  go to state 52
    llist_exp  go to state 53


state 41

   30 command: IF . bool_exp $@8 THEN commands $@9 ELSE $@10 commands FI

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    bool_exp  go to state 57
    exp       go to state 58


state 42

   33 command: WHILE . $@11 bool_exp $@12 DO commands END

    $default  reduce using rule 31 ($@11)

    $@11  go to state 59


state 43

   23 command: SKIP .

    $default  reduce using rule 23 (command)


state 44

    4 program: $@1 functions $@2 LET declarations IN $@3 commands END .

    $default  reduce using rule 4 (program)


state 45

   24 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 60


state 46

   25 command: WRITE . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 61


state 47

   22 commands: commands command . ';'

    ';'  shift, and go to state 62


state 48

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 . DO commands END

    DO  shift, and go to state 63


state 49

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 . DO commands END

    DO  shift, and go to state 64


state 50

   26 command: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 65


state 51

   40 variables: '(' . llist_exp exp ')'

    $default  reduce using rule 41 (llist_exp)

    llist_exp  go to state 66


state 52

   34 command: IDENTIFIER variables .

    $default  reduce using rule 34 (command)


state 53

   39 variables: llist_exp . exp '.'
   42 llist_exp: llist_exp . exp ','

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 67


state 54

   43 exp: NUMBER .

    $default  reduce using rule 43 (exp)


state 55

   44 exp: IDENTIFIER .

    $default  reduce using rule 44 (exp)


state 56

   50 exp: '(' . exp ')'

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 68


state 57

   30 command: IF bool_exp . $@8 THEN commands $@9 ELSE $@10 commands FI

    $default  reduce using rule 27 ($@8)

    $@8  go to state 69


state 58

   35 bool_exp: exp . '<' exp
   36         | exp . '=' exp
   37         | exp . '>' exp
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '>'  shift, and go to state 77


state 59

   33 command: WHILE $@11 . bool_exp $@12 DO commands END

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    bool_exp  go to state 78
    exp       go to state 58


state 60

   24 command: READ IDENTIFIER .

    $default  reduce using rule 24 (command)


state 61

   25 command: WRITE exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74

    $default  reduce using rule 25 (command)


state 62

   22 commands: commands command ';' .

    $default  reduce using rule 22 (commands)


state 63

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 DO . commands END

    $default  reduce using rule 21 (commands)

    commands  go to state 79


state 64

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 DO . commands END

    $default  reduce using rule 21 (commands)

    commands  go to state 80


state 65

   26 command: IDENTIFIER ASSGNOP exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74

    $default  reduce using rule 26 (command)


state 66

   40 variables: '(' llist_exp . exp ')'
   42 llist_exp: llist_exp . exp ','

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 81


state 67

   39 variables: llist_exp exp . '.'
   42 llist_exp: llist_exp exp . ','
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74
    '.'  shift, and go to state 82
    ','  shift, and go to state 83


state 68

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp
   50    | '(' exp . ')'

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74
    ')'  shift, and go to state 84


state 69

   30 command: IF bool_exp $@8 . THEN commands $@9 ELSE $@10 commands FI

    THEN  shift, and go to state 85


state 70

   46 exp: exp '-' . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 86


state 71

   45 exp: exp '+' . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 87


state 72

   47 exp: exp '*' . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 88


state 73

   48 exp: exp '/' . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 89


state 74

   49 exp: exp '^' . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 90


state 75

   35 bool_exp: exp '<' . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 91


state 76

   36 bool_exp: exp '=' . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 92


state 77

   37 bool_exp: exp '>' . exp

    NUMBER      shift, and go to state 54
    IDENTIFIER  shift, and go to state 55
    '('         shift, and go to state 56

    exp  go to state 93


state 78

   33 command: WHILE $@11 bool_exp . $@12 DO commands END

    $default  reduce using rule 32 ($@12)

    $@12  go to state 94


state 79

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 DO commands . END
   22 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    SKIP        shift, and go to state 43
    END         shift, and go to state 95
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46

    command  go to state 47


state 80

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 DO commands . END
   22 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    SKIP        shift, and go to state 43
    END         shift, and go to state 96
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46

    command  go to state 47


state 81

   40 variables: '(' llist_exp exp . ')'
   42 llist_exp: llist_exp exp . ','
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74
    ')'  shift, and go to state 97
    ','  shift, and go to state 83


state 82

   39 variables: llist_exp exp '.' .

    $default  reduce using rule 39 (variables)


state 83

   42 llist_exp: llist_exp exp ',' .

    $default  reduce using rule 42 (llist_exp)


state 84

   50 exp: '(' exp ')' .

    $default  reduce using rule 50 (exp)


state 85

   30 command: IF bool_exp $@8 THEN . commands $@9 ELSE $@10 commands FI

    $default  reduce using rule 21 (commands)

    commands  go to state 98


state 86

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   46    | exp '-' exp .
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74

    $default  reduce using rule 46 (exp)


state 87

   45 exp: exp . '+' exp
   45    | exp '+' exp .
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74

    $default  reduce using rule 45 (exp)


state 88

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   47    | exp '*' exp .
   48    | exp . '/' exp
   49    | exp . '^' exp

    '^'  shift, and go to state 74

    $default  reduce using rule 47 (exp)


state 89

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   48    | exp '/' exp .
   49    | exp . '^' exp

    '^'  shift, and go to state 74

    $default  reduce using rule 48 (exp)


state 90

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp
   49    | exp '^' exp .

    '^'  shift, and go to state 74

    $default  reduce using rule 49 (exp)


state 91

   35 bool_exp: exp '<' exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74

    $default  reduce using rule 35 (bool_exp)


state 92

   36 bool_exp: exp '=' exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74

    $default  reduce using rule 36 (bool_exp)


state 93

   37 bool_exp: exp '>' exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '^'  shift, and go to state 74

    $default  reduce using rule 37 (bool_exp)


state 94

   33 command: WHILE $@11 bool_exp $@12 . DO commands END

    DO  shift, and go to state 99


state 95

   10 procedure: Procedure id_proc '(' declarations ')' $@4 LET declarations $@5 DO commands END .

    $default  reduce using rule 10 (procedure)


state 96

   13 function: Function id_funct '(' declarations ')' $@6 LET declarations $@7 DO commands END .

    $default  reduce using rule 13 (function)


state 97

   40 variables: '(' llist_exp exp ')' .

    $default  reduce using rule 40 (variables)


state 98

   22 commands: commands . command ';'
   30 command: IF bool_exp $@8 THEN commands . $@9 ELSE $@10 commands FI

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    SKIP        shift, and go to state 43
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46

    $default  reduce using rule 28 ($@9)

    command  go to state 47
    $@9      go to state 100


state 99

   33 command: WHILE $@11 bool_exp $@12 DO . commands END

    $default  reduce using rule 21 (commands)

    commands  go to state 101


state 100

   30 command: IF bool_exp $@8 THEN commands $@9 . ELSE $@10 commands FI

    ELSE  shift, and go to state 102


state 101

   22 commands: commands . command ';'
   33 command: WHILE $@11 bool_exp $@12 DO commands . END

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    SKIP        shift, and go to state 43
    END         shift, and go to state 103
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46

    command  go to state 47


state 102

   30 command: IF bool_exp $@8 THEN commands $@9 ELSE . $@10 commands FI

    $default  reduce using rule 29 ($@10)

    $@10  go to state 104


state 103

   33 command: WHILE $@11 bool_exp $@12 DO commands END .

    $default  reduce using rule 33 (command)


state 104

   30 command: IF bool_exp $@8 THEN commands $@9 ELSE $@10 . commands FI

    $default  reduce using rule 21 (commands)

    commands  go to state 105


state 105

   22 commands: commands . command ';'
   30 command: IF bool_exp $@8 THEN commands $@9 ELSE $@10 commands . FI

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    SKIP        shift, and go to state 43
    FI          shift, and go to state 106
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46

    command  go to state 47


state 106

   30 command: IF bool_exp $@8 THEN commands $@9 ELSE $@10 commands FI .

    $default  reduce using rule 30 (command)
