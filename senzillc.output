Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: functions LET declarations IN $@1 commands END

    3 functions: /* empty */
    4          | function
    5          | procedure

    6 procedure: Procedure id_proc '(' declarations ')' LET declarations DO commands END

    7 function: Function id_funct '(' declarations ')' LET declarations DO commands END

    8 id_proc: IDENTIFIER

    9 id_funct: IDENTIFIER

   10 declarations: /* empty */
   11             | INTEGER id_seq IDENTIFIER '.'

   12 id_seq: /* empty */
   13       | id_seq IDENTIFIER ','

   14 commands: /* empty */
   15         | commands command ';'

   16 command: SKIP
   17        | READ IDENTIFIER
   18        | WRITE exp
   19        | IDENTIFIER ASSGNOP exp

   20 $@2: /* empty */

   21 $@3: /* empty */

   22 $@4: /* empty */

   23 command: IF bool_exp $@2 THEN commands $@3 ELSE $@4 commands FI

   24 $@5: /* empty */

   25 $@6: /* empty */

   26 command: WHILE $@5 bool_exp $@6 DO commands END

   27 bool_exp: exp '<' exp
   28         | exp '=' exp
   29         | exp '>' exp

   30 exp: NUMBER
   31    | IDENTIFIER
   32    | exp '+' exp
   33    | exp '-' exp
   34    | exp '*' exp
   35    | exp '/' exp
   36    | exp '^' exp
   37    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 7 37
')' (41) 6 7 37
'*' (42) 34
'+' (43) 32
',' (44) 13
'-' (45) 33
'.' (46) 11
'/' (47) 35
';' (59) 15
'<' (60) 27
'=' (61) 28
'>' (62) 29
'^' (94) 36
error (256)
NUMBER (258) 30
IDENTIFIER (259) 8 9 11 13 17 19 31
IF (260) 23
WHILE (261) 26
SKIP (262) 16
THEN (263) 23
ELSE (264) 23
FI (265) 23
DO (266) 6 7 26
END (267) 2 6 7 26
INTEGER (268) 11
READ (269) 17
WRITE (270) 18
LET (271) 2 6 7
IN (272) 2
Procedure (273) 6
Function (274) 7
ASSGNOP (275) 19


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 2, on right: 0
$@1 (36)
    on left: 1, on right: 2
functions (37)
    on left: 3 4 5, on right: 2
procedure (38)
    on left: 6, on right: 5
function (39)
    on left: 7, on right: 4
id_proc (40)
    on left: 8, on right: 6
id_funct (41)
    on left: 9, on right: 7
declarations (42)
    on left: 10 11, on right: 2 6 7
id_seq (43)
    on left: 12 13, on right: 11 13
commands (44)
    on left: 14 15, on right: 2 6 7 15 23 26
command (45)
    on left: 16 17 18 19 23 26, on right: 15
$@2 (46)
    on left: 20, on right: 23
$@3 (47)
    on left: 21, on right: 23
$@4 (48)
    on left: 22, on right: 23
$@5 (49)
    on left: 24, on right: 26
$@6 (50)
    on left: 25, on right: 26
bool_exp (51)
    on left: 27 28 29, on right: 23 26
exp (52)
    on left: 30 31 32 33 34 35 36 37, on right: 18 19 27 28 29 32 33
    34 35 36 37


State 0

    0 $accept: . program $end

    Procedure  shift, and go to state 1
    Function   shift, and go to state 2

    $default  reduce using rule 3 (functions)

    program    go to state 3
    functions  go to state 4
    procedure  go to state 5
    function   go to state 6


State 1

    6 procedure: Procedure . id_proc '(' declarations ')' LET declarations DO commands END

    IDENTIFIER  shift, and go to state 7

    id_proc  go to state 8


State 2

    7 function: Function . id_funct '(' declarations ')' LET declarations DO commands END

    IDENTIFIER  shift, and go to state 9

    id_funct  go to state 10


State 3

    0 $accept: program . $end

    $end  shift, and go to state 11


State 4

    2 program: functions . LET declarations IN $@1 commands END

    LET  shift, and go to state 12


State 5

    5 functions: procedure .

    $default  reduce using rule 5 (functions)


State 6

    4 functions: function .

    $default  reduce using rule 4 (functions)


State 7

    8 id_proc: IDENTIFIER .

    $default  reduce using rule 8 (id_proc)


State 8

    6 procedure: Procedure id_proc . '(' declarations ')' LET declarations DO commands END

    '('  shift, and go to state 13


State 9

    9 id_funct: IDENTIFIER .

    $default  reduce using rule 9 (id_funct)


State 10

    7 function: Function id_funct . '(' declarations ')' LET declarations DO commands END

    '('  shift, and go to state 14


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 program: functions LET . declarations IN $@1 commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 10 (declarations)

    declarations  go to state 16


State 13

    6 procedure: Procedure id_proc '(' . declarations ')' LET declarations DO commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 10 (declarations)

    declarations  go to state 17


State 14

    7 function: Function id_funct '(' . declarations ')' LET declarations DO commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 10 (declarations)

    declarations  go to state 18


State 15

   11 declarations: INTEGER . id_seq IDENTIFIER '.'

    $default  reduce using rule 12 (id_seq)

    id_seq  go to state 19


State 16

    2 program: functions LET declarations . IN $@1 commands END

    IN  shift, and go to state 20


State 17

    6 procedure: Procedure id_proc '(' declarations . ')' LET declarations DO commands END

    ')'  shift, and go to state 21


State 18

    7 function: Function id_funct '(' declarations . ')' LET declarations DO commands END

    ')'  shift, and go to state 22


State 19

   11 declarations: INTEGER id_seq . IDENTIFIER '.'
   13 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 23


State 20

    2 program: functions LET declarations IN . $@1 commands END

    $default  reduce using rule 1 ($@1)

    $@1  go to state 24


State 21

    6 procedure: Procedure id_proc '(' declarations ')' . LET declarations DO commands END

    LET  shift, and go to state 25


State 22

    7 function: Function id_funct '(' declarations ')' . LET declarations DO commands END

    LET  shift, and go to state 26


State 23

   11 declarations: INTEGER id_seq IDENTIFIER . '.'
   13 id_seq: id_seq IDENTIFIER . ','

    '.'  shift, and go to state 27
    ','  shift, and go to state 28


State 24

    2 program: functions LET declarations IN $@1 . commands END

    $default  reduce using rule 14 (commands)

    commands  go to state 29


State 25

    6 procedure: Procedure id_proc '(' declarations ')' LET . declarations DO commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 10 (declarations)

    declarations  go to state 30


State 26

    7 function: Function id_funct '(' declarations ')' LET . declarations DO commands END

    INTEGER  shift, and go to state 15

    $default  reduce using rule 10 (declarations)

    declarations  go to state 31


State 27

   11 declarations: INTEGER id_seq IDENTIFIER '.' .

    $default  reduce using rule 11 (declarations)


State 28

   13 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 13 (id_seq)


State 29

    2 program: functions LET declarations IN $@1 commands . END
   15 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    END         shift, and go to state 36
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 30

    6 procedure: Procedure id_proc '(' declarations ')' LET declarations . DO commands END

    DO  shift, and go to state 40


State 31

    7 function: Function id_funct '(' declarations ')' LET declarations . DO commands END

    DO  shift, and go to state 41


State 32

   19 command: IDENTIFIER . ASSGNOP exp

    ASSGNOP  shift, and go to state 42


State 33

   23 command: IF . bool_exp $@2 THEN commands $@3 ELSE $@4 commands FI

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    bool_exp  go to state 46
    exp       go to state 47


State 34

   26 command: WHILE . $@5 bool_exp $@6 DO commands END

    $default  reduce using rule 24 ($@5)

    $@5  go to state 48


State 35

   16 command: SKIP .

    $default  reduce using rule 16 (command)


State 36

    2 program: functions LET declarations IN $@1 commands END .

    $default  reduce using rule 2 (program)


State 37

   17 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


State 38

   18 command: WRITE . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 50


State 39

   15 commands: commands command . ';'

    ';'  shift, and go to state 51


State 40

    6 procedure: Procedure id_proc '(' declarations ')' LET declarations DO . commands END

    $default  reduce using rule 14 (commands)

    commands  go to state 52


State 41

    7 function: Function id_funct '(' declarations ')' LET declarations DO . commands END

    $default  reduce using rule 14 (commands)

    commands  go to state 53


State 42

   19 command: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 54


State 43

   30 exp: NUMBER .

    $default  reduce using rule 30 (exp)


State 44

   31 exp: IDENTIFIER .

    $default  reduce using rule 31 (exp)


State 45

   37 exp: '(' . exp ')'

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 55


State 46

   23 command: IF bool_exp . $@2 THEN commands $@3 ELSE $@4 commands FI

    $default  reduce using rule 20 ($@2)

    $@2  go to state 56


State 47

   27 bool_exp: exp . '<' exp
   28         | exp . '=' exp
   29         | exp . '>' exp
   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    '<'  shift, and go to state 62
    '='  shift, and go to state 63
    '>'  shift, and go to state 64


State 48

   26 command: WHILE $@5 . bool_exp $@6 DO commands END

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    bool_exp  go to state 65
    exp       go to state 47


State 49

   17 command: READ IDENTIFIER .

    $default  reduce using rule 17 (command)


State 50

   18 command: WRITE exp .
   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 18 (command)


State 51

   15 commands: commands command ';' .

    $default  reduce using rule 15 (commands)


State 52

    6 procedure: Procedure id_proc '(' declarations ')' LET declarations DO commands . END
   15 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    END         shift, and go to state 66
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 53

    7 function: Function id_funct '(' declarations ')' LET declarations DO commands . END
   15 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    END         shift, and go to state 67
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 54

   19 command: IDENTIFIER ASSGNOP exp .
   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 19 (command)


State 55

   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp
   37    | '(' exp . ')'

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61
    ')'  shift, and go to state 68


State 56

   23 command: IF bool_exp $@2 . THEN commands $@3 ELSE $@4 commands FI

    THEN  shift, and go to state 69


State 57

   33 exp: exp '-' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 70


State 58

   32 exp: exp '+' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 71


State 59

   34 exp: exp '*' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 72


State 60

   35 exp: exp '/' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 73


State 61

   36 exp: exp '^' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 74


State 62

   27 bool_exp: exp '<' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 75


State 63

   28 bool_exp: exp '=' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 76


State 64

   29 bool_exp: exp '>' . exp

    NUMBER      shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    '('         shift, and go to state 45

    exp  go to state 77


State 65

   26 command: WHILE $@5 bool_exp . $@6 DO commands END

    $default  reduce using rule 25 ($@6)

    $@6  go to state 78


State 66

    6 procedure: Procedure id_proc '(' declarations ')' LET declarations DO commands END .

    $default  reduce using rule 6 (procedure)


State 67

    7 function: Function id_funct '(' declarations ')' LET declarations DO commands END .

    $default  reduce using rule 7 (function)


State 68

   37 exp: '(' exp ')' .

    $default  reduce using rule 37 (exp)


State 69

   23 command: IF bool_exp $@2 THEN . commands $@3 ELSE $@4 commands FI

    $default  reduce using rule 14 (commands)

    commands  go to state 79


State 70

   32 exp: exp . '+' exp
   33    | exp . '-' exp
   33    | exp '-' exp .
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 33 (exp)


State 71

   32 exp: exp . '+' exp
   32    | exp '+' exp .
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 32 (exp)


State 72

   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   34    | exp '*' exp .
   35    | exp . '/' exp
   36    | exp . '^' exp

    '^'  shift, and go to state 61

    $default  reduce using rule 34 (exp)


State 73

   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   35    | exp '/' exp .
   36    | exp . '^' exp

    '^'  shift, and go to state 61

    $default  reduce using rule 35 (exp)


State 74

   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp
   36    | exp '^' exp .

    '^'  shift, and go to state 61

    $default  reduce using rule 36 (exp)


State 75

   27 bool_exp: exp '<' exp .
   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 27 (bool_exp)


State 76

   28 bool_exp: exp '=' exp .
   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 28 (bool_exp)


State 77

   29 bool_exp: exp '>' exp .
   32 exp: exp . '+' exp
   33    | exp . '-' exp
   34    | exp . '*' exp
   35    | exp . '/' exp
   36    | exp . '^' exp

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 29 (bool_exp)


State 78

   26 command: WHILE $@5 bool_exp $@6 . DO commands END

    DO  shift, and go to state 80


State 79

   15 commands: commands . command ';'
   23 command: IF bool_exp $@2 THEN commands . $@3 ELSE $@4 commands FI

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    $default  reduce using rule 21 ($@3)

    command  go to state 39
    $@3      go to state 81


State 80

   26 command: WHILE $@5 bool_exp $@6 DO . commands END

    $default  reduce using rule 14 (commands)

    commands  go to state 82


State 81

   23 command: IF bool_exp $@2 THEN commands $@3 . ELSE $@4 commands FI

    ELSE  shift, and go to state 83


State 82

   15 commands: commands . command ';'
   26 command: WHILE $@5 bool_exp $@6 DO commands . END

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    END         shift, and go to state 84
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 83

   23 command: IF bool_exp $@2 THEN commands $@3 ELSE . $@4 commands FI

    $default  reduce using rule 22 ($@4)

    $@4  go to state 85


State 84

   26 command: WHILE $@5 bool_exp $@6 DO commands END .

    $default  reduce using rule 26 (command)


State 85

   23 command: IF bool_exp $@2 THEN commands $@3 ELSE $@4 . commands FI

    $default  reduce using rule 14 (commands)

    commands  go to state 86


State 86

   15 commands: commands . command ';'
   23 command: IF bool_exp $@2 THEN commands $@3 ELSE $@4 commands . FI

    IDENTIFIER  shift, and go to state 32
    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    SKIP        shift, and go to state 35
    FI          shift, and go to state 87
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38

    command  go to state 39


State 87

   23 command: IF bool_exp $@2 THEN commands $@3 ELSE $@4 commands FI .

    $default  reduce using rule 23 (command)
