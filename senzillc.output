State 58 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 $@3: /* empty */

    4 program: $@1 functions $@2 LET declarations IN $@3 commands END

    5 functions: /* empty */
    6          | function
    7          | procedure

    8 $@4: /* empty */

    9 $@5: /* empty */

   10 $@6: /* empty */

   11 procedure: Procedure $@4 id_proc declarations $@5 LET declarations $@6 DO commands END

   12 $@7: /* empty */

   13 $@8: /* empty */

   14 $@9: /* empty */

   15 function: Function $@7 id_funct declarations $@8 LET declarations $@9 DO commands END

   16 id_proc: IDENTIFIER

   17 id_funct: IDENTIFIER

   18 declarations: /* empty */
   19             | INTEGER id_seq IDENTIFIER '.'
   20             | '(' id_seq IDENTIFIER ')'

   21 id_seq: /* empty */
   22       | id_seq IDENTIFIER ','

   23 commands: /* empty */
   24         | commands command ';'

   25 command: SKIP
   26        | READ IDENTIFIER
   27        | WRITE exp
   28        | IDENTIFIER ASSGNOP exp

   29 $@10: /* empty */

   30 $@11: /* empty */

   31 $@12: /* empty */

   32 command: IF bool_exp $@10 THEN commands $@11 ELSE $@12 commands FI

   33 $@13: /* empty */

   34 $@14: /* empty */

   35 command: WHILE $@13 bool_exp $@14 DO commands END
   36        | Procedure IDENTIFIER variables

   37 bool_exp: exp '<' exp
   38         | exp '=' exp
   39         | exp '>' exp

   40 variables: /* empty */
   41          | llist_exp exp '.'
   42          | '(' llist_exp exp ')'

   43 llist_exp: /* empty */
   44          | llist_exp exp ','

   45 exp: NUMBER
   46    | IDENTIFIER
   47    | exp '+' exp
   48    | exp '-' exp
   49    | exp '*' exp
   50    | exp '/' exp
   51    | exp '^' exp
   52    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 20 42 52
')' (41) 20 42 52
'*' (42) 49
'+' (43) 47
',' (44) 22 44
'-' (45) 48
'.' (46) 19 41
'/' (47) 50
';' (59) 24
'<' (60) 37
'=' (61) 38
'>' (62) 39
'^' (94) 51
error (256)
NUMBER (258) 45
IDENTIFIER (259) 16 17 19 20 22 26 28 36 46
IF (260) 32
WHILE (261) 35
Function (262) 15
Procedure (263) 11 36
SKIP (264) 25
THEN (265) 32
ELSE (266) 32
FI (267) 32
DO (268) 11 15 35
END (269) 4 11 15 35
INTEGER (270) 19
READ (271) 26
WRITE (272) 27
LET (273) 4 11 15
IN (274) 4
ASSGNOP (275) 28


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 4, on right: 0
$@1 (36)
    on left: 1, on right: 4
$@2 (37)
    on left: 2, on right: 4
$@3 (38)
    on left: 3, on right: 4
functions (39)
    on left: 5 6 7, on right: 4
procedure (40)
    on left: 11, on right: 7
$@4 (41)
    on left: 8, on right: 11
$@5 (42)
    on left: 9, on right: 11
$@6 (43)
    on left: 10, on right: 11
function (44)
    on left: 15, on right: 6
$@7 (45)
    on left: 12, on right: 15
$@8 (46)
    on left: 13, on right: 15
$@9 (47)
    on left: 14, on right: 15
id_proc (48)
    on left: 16, on right: 11
id_funct (49)
    on left: 17, on right: 15
declarations (50)
    on left: 18 19 20, on right: 4 11 15
id_seq (51)
    on left: 21 22, on right: 19 20 22
commands (52)
    on left: 23 24, on right: 4 11 15 24 32 35
command (53)
    on left: 25 26 27 28 32 35 36, on right: 24
$@10 (54)
    on left: 29, on right: 32
$@11 (55)
    on left: 30, on right: 32
$@12 (56)
    on left: 31, on right: 32
$@13 (57)
    on left: 33, on right: 35
$@14 (58)
    on left: 34, on right: 35
bool_exp (59)
    on left: 37 38 39, on right: 32 35
variables (60)
    on left: 40 41 42, on right: 36
llist_exp (61)
    on left: 43 44, on right: 41 42 44
exp (62)
    on left: 45 46 47 48 49 50 51 52, on right: 27 28 37 38 39 41 42
    44 47 48 49 50 51 52


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    4 program: $@1 . functions $@2 LET declarations IN $@3 commands END

    Function   shift, and go to state 4
    Procedure  shift, and go to state 5

    $default  reduce using rule 5 (functions)

    functions  go to state 6
    procedure  go to state 7
    function   go to state 8


state 3

    0 $accept: program $end .

    $default  accept


state 4

   15 function: Function . $@7 id_funct declarations $@8 LET declarations $@9 DO commands END

    $default  reduce using rule 12 ($@7)

    $@7  go to state 9


state 5

   11 procedure: Procedure . $@4 id_proc declarations $@5 LET declarations $@6 DO commands END

    $default  reduce using rule 8 ($@4)

    $@4  go to state 10


state 6

    4 program: $@1 functions . $@2 LET declarations IN $@3 commands END

    $default  reduce using rule 2 ($@2)

    $@2  go to state 11


state 7

    7 functions: procedure .

    $default  reduce using rule 7 (functions)


state 8

    6 functions: function .

    $default  reduce using rule 6 (functions)


state 9

   15 function: Function $@7 . id_funct declarations $@8 LET declarations $@9 DO commands END

    IDENTIFIER  shift, and go to state 12

    id_funct  go to state 13


state 10

   11 procedure: Procedure $@4 . id_proc declarations $@5 LET declarations $@6 DO commands END

    IDENTIFIER  shift, and go to state 14

    id_proc  go to state 15


state 11

    4 program: $@1 functions $@2 . LET declarations IN $@3 commands END

    LET  shift, and go to state 16


state 12

   17 id_funct: IDENTIFIER .

    $default  reduce using rule 17 (id_funct)


state 13

   15 function: Function $@7 id_funct . declarations $@8 LET declarations $@9 DO commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 18 (declarations)

    declarations  go to state 19


state 14

   16 id_proc: IDENTIFIER .

    $default  reduce using rule 16 (id_proc)


state 15

   11 procedure: Procedure $@4 id_proc . declarations $@5 LET declarations $@6 DO commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 18 (declarations)

    declarations  go to state 20


state 16

    4 program: $@1 functions $@2 LET . declarations IN $@3 commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 18 (declarations)

    declarations  go to state 21


state 17

   19 declarations: INTEGER . id_seq IDENTIFIER '.'

    $default  reduce using rule 21 (id_seq)

    id_seq  go to state 22


state 18

   20 declarations: '(' . id_seq IDENTIFIER ')'

    $default  reduce using rule 21 (id_seq)

    id_seq  go to state 23


state 19

   15 function: Function $@7 id_funct declarations . $@8 LET declarations $@9 DO commands END

    $default  reduce using rule 13 ($@8)

    $@8  go to state 24


state 20

   11 procedure: Procedure $@4 id_proc declarations . $@5 LET declarations $@6 DO commands END

    $default  reduce using rule 9 ($@5)

    $@5  go to state 25


state 21

    4 program: $@1 functions $@2 LET declarations . IN $@3 commands END

    IN  shift, and go to state 26


state 22

   19 declarations: INTEGER id_seq . IDENTIFIER '.'
   22 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 27


state 23

   20 declarations: '(' id_seq . IDENTIFIER ')'
   22 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 28


state 24

   15 function: Function $@7 id_funct declarations $@8 . LET declarations $@9 DO commands END

    LET  shift, and go to state 29


state 25

   11 procedure: Procedure $@4 id_proc declarations $@5 . LET declarations $@6 DO commands END

    LET  shift, and go to state 30


state 26

    4 program: $@1 functions $@2 LET declarations IN . $@3 commands END

    $default  reduce using rule 3 ($@3)

    $@3  go to state 31


state 27

   19 declarations: INTEGER id_seq IDENTIFIER . '.'
   22 id_seq: id_seq IDENTIFIER . ','

    '.'  shift, and go to state 32
    ','  shift, and go to state 33


state 28

   20 declarations: '(' id_seq IDENTIFIER . ')'
   22 id_seq: id_seq IDENTIFIER . ','

    ')'  shift, and go to state 34
    ','  shift, and go to state 33


state 29

   15 function: Function $@7 id_funct declarations $@8 LET . declarations $@9 DO commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 18 (declarations)

    declarations  go to state 35


state 30

   11 procedure: Procedure $@4 id_proc declarations $@5 LET . declarations $@6 DO commands END

    INTEGER  shift, and go to state 17
    '('      shift, and go to state 18

    $default  reduce using rule 18 (declarations)

    declarations  go to state 36


state 31

    4 program: $@1 functions $@2 LET declarations IN $@3 . commands END

    $default  reduce using rule 23 (commands)

    commands  go to state 37


state 32

   19 declarations: INTEGER id_seq IDENTIFIER '.' .

    $default  reduce using rule 19 (declarations)


state 33

   22 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 22 (id_seq)


state 34

   20 declarations: '(' id_seq IDENTIFIER ')' .

    $default  reduce using rule 20 (declarations)


state 35

   15 function: Function $@7 id_funct declarations $@8 LET declarations . $@9 DO commands END

    $default  reduce using rule 14 ($@9)

    $@9  go to state 38


state 36

   11 procedure: Procedure $@4 id_proc declarations $@5 LET declarations . $@6 DO commands END

    $default  reduce using rule 10 ($@6)

    $@6  go to state 39


state 37

    4 program: $@1 functions $@2 LET declarations IN $@3 commands . END
   24 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    Procedure   shift, and go to state 43
    SKIP        shift, and go to state 44
    END         shift, and go to state 45
    READ        shift, and go to state 46
    WRITE       shift, and go to state 47

    command  go to state 48


state 38

   15 function: Function $@7 id_funct declarations $@8 LET declarations $@9 . DO commands END

    DO  shift, and go to state 49


state 39

   11 procedure: Procedure $@4 id_proc declarations $@5 LET declarations $@6 . DO commands END

    DO  shift, and go to state 50


state 40

   28 command: IDENTIFIER . ASSGNOP exp

    ASSGNOP  shift, and go to state 51


state 41

   32 command: IF . bool_exp $@10 THEN commands $@11 ELSE $@12 commands FI

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    bool_exp  go to state 55
    exp       go to state 56


state 42

   35 command: WHILE . $@13 bool_exp $@14 DO commands END

    $default  reduce using rule 33 ($@13)

    $@13  go to state 57


state 43

   36 command: Procedure . IDENTIFIER variables

    IDENTIFIER  shift, and go to state 58


state 44

   25 command: SKIP .

    $default  reduce using rule 25 (command)


state 45

    4 program: $@1 functions $@2 LET declarations IN $@3 commands END .

    $default  reduce using rule 4 (program)


state 46

   26 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 59


state 47

   27 command: WRITE . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 60


state 48

   24 commands: commands command . ';'

    ';'  shift, and go to state 61


state 49

   15 function: Function $@7 id_funct declarations $@8 LET declarations $@9 DO . commands END

    $default  reduce using rule 23 (commands)

    commands  go to state 62


state 50

   11 procedure: Procedure $@4 id_proc declarations $@5 LET declarations $@6 DO . commands END

    $default  reduce using rule 23 (commands)

    commands  go to state 63


state 51

   28 command: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 64


state 52

   45 exp: NUMBER .

    $default  reduce using rule 45 (exp)


state 53

   46 exp: IDENTIFIER .

    $default  reduce using rule 46 (exp)


state 54

   52 exp: '(' . exp ')'

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 65


state 55

   32 command: IF bool_exp . $@10 THEN commands $@11 ELSE $@12 commands FI

    $default  reduce using rule 29 ($@10)

    $@10  go to state 66


state 56

   37 bool_exp: exp . '<' exp
   38         | exp . '=' exp
   39         | exp . '>' exp
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73
    '>'  shift, and go to state 74


state 57

   35 command: WHILE $@13 . bool_exp $@14 DO commands END

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    bool_exp  go to state 75
    exp       go to state 56


state 58

   36 command: Procedure IDENTIFIER . variables

    '('  shift, and go to state 76

    '('       [reduce using rule 43 (llist_exp)]
    ';'       reduce using rule 40 (variables)
    $default  reduce using rule 43 (llist_exp)

    variables  go to state 77
    llist_exp  go to state 78


state 59

   26 command: READ IDENTIFIER .

    $default  reduce using rule 26 (command)


state 60

   27 command: WRITE exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 27 (command)


state 61

   24 commands: commands command ';' .

    $default  reduce using rule 24 (commands)


state 62

   15 function: Function $@7 id_funct declarations $@8 LET declarations $@9 DO commands . END
   24 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    Procedure   shift, and go to state 43
    SKIP        shift, and go to state 44
    END         shift, and go to state 79
    READ        shift, and go to state 46
    WRITE       shift, and go to state 47

    command  go to state 48


state 63

   11 procedure: Procedure $@4 id_proc declarations $@5 LET declarations $@6 DO commands . END
   24 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    Procedure   shift, and go to state 43
    SKIP        shift, and go to state 44
    END         shift, and go to state 80
    READ        shift, and go to state 46
    WRITE       shift, and go to state 47

    command  go to state 48


state 64

   28 command: IDENTIFIER ASSGNOP exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 28 (command)


state 65

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp
   52    | '(' exp . ')'

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ')'  shift, and go to state 81


state 66

   32 command: IF bool_exp $@10 . THEN commands $@11 ELSE $@12 commands FI

    THEN  shift, and go to state 82


state 67

   48 exp: exp '-' . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 83


state 68

   47 exp: exp '+' . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 84


state 69

   49 exp: exp '*' . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 85


state 70

   50 exp: exp '/' . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 86


state 71

   51 exp: exp '^' . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 87


state 72

   37 bool_exp: exp '<' . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 88


state 73

   38 bool_exp: exp '=' . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 89


state 74

   39 bool_exp: exp '>' . exp

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 90


state 75

   35 command: WHILE $@13 bool_exp . $@14 DO commands END

    $default  reduce using rule 34 ($@14)

    $@14  go to state 91


state 76

   42 variables: '(' . llist_exp exp ')'

    $default  reduce using rule 43 (llist_exp)

    llist_exp  go to state 92


state 77

   36 command: Procedure IDENTIFIER variables .

    $default  reduce using rule 36 (command)


state 78

   41 variables: llist_exp . exp '.'
   44 llist_exp: llist_exp . exp ','

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 93


state 79

   15 function: Function $@7 id_funct declarations $@8 LET declarations $@9 DO commands END .

    $default  reduce using rule 15 (function)


state 80

   11 procedure: Procedure $@4 id_proc declarations $@5 LET declarations $@6 DO commands END .

    $default  reduce using rule 11 (procedure)


state 81

   52 exp: '(' exp ')' .

    $default  reduce using rule 52 (exp)


state 82

   32 command: IF bool_exp $@10 THEN . commands $@11 ELSE $@12 commands FI

    $default  reduce using rule 23 (commands)

    commands  go to state 94


state 83

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   48    | exp '-' exp .
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 48 (exp)


state 84

   47 exp: exp . '+' exp
   47    | exp '+' exp .
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 47 (exp)


state 85

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   49    | exp '*' exp .
   50    | exp . '/' exp
   51    | exp . '^' exp

    '^'  shift, and go to state 71

    $default  reduce using rule 49 (exp)


state 86

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   50    | exp '/' exp .
   51    | exp . '^' exp

    '^'  shift, and go to state 71

    $default  reduce using rule 50 (exp)


state 87

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp
   51    | exp '^' exp .

    '^'  shift, and go to state 71

    $default  reduce using rule 51 (exp)


state 88

   37 bool_exp: exp '<' exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 37 (bool_exp)


state 89

   38 bool_exp: exp '=' exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 38 (bool_exp)


state 90

   39 bool_exp: exp '>' exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 39 (bool_exp)


state 91

   35 command: WHILE $@13 bool_exp $@14 . DO commands END

    DO  shift, and go to state 95


state 92

   42 variables: '(' llist_exp . exp ')'
   44 llist_exp: llist_exp . exp ','

    NUMBER      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53
    '('         shift, and go to state 54

    exp  go to state 96


state 93

   41 variables: llist_exp exp . '.'
   44 llist_exp: llist_exp exp . ','
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    '.'  shift, and go to state 97
    ','  shift, and go to state 98


state 94

   24 commands: commands . command ';'
   32 command: IF bool_exp $@10 THEN commands . $@11 ELSE $@12 commands FI

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    Procedure   shift, and go to state 43
    SKIP        shift, and go to state 44
    READ        shift, and go to state 46
    WRITE       shift, and go to state 47

    $default  reduce using rule 30 ($@11)

    command  go to state 48
    $@11     go to state 99


state 95

   35 command: WHILE $@13 bool_exp $@14 DO . commands END

    $default  reduce using rule 23 (commands)

    commands  go to state 100


state 96

   42 variables: '(' llist_exp exp . ')'
   44 llist_exp: llist_exp exp . ','
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '*' exp
   50    | exp . '/' exp
   51    | exp . '^' exp

    '-'  shift, and go to state 67
    '+'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ')'  shift, and go to state 101
    ','  shift, and go to state 98


state 97

   41 variables: llist_exp exp '.' .

    $default  reduce using rule 41 (variables)


state 98

   44 llist_exp: llist_exp exp ',' .

    $default  reduce using rule 44 (llist_exp)


state 99

   32 command: IF bool_exp $@10 THEN commands $@11 . ELSE $@12 commands FI

    ELSE  shift, and go to state 102


state 100

   24 commands: commands . command ';'
   35 command: WHILE $@13 bool_exp $@14 DO commands . END

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    Procedure   shift, and go to state 43
    SKIP        shift, and go to state 44
    END         shift, and go to state 103
    READ        shift, and go to state 46
    WRITE       shift, and go to state 47

    command  go to state 48


state 101

   42 variables: '(' llist_exp exp ')' .

    $default  reduce using rule 42 (variables)


state 102

   32 command: IF bool_exp $@10 THEN commands $@11 ELSE . $@12 commands FI

    $default  reduce using rule 31 ($@12)

    $@12  go to state 104


state 103

   35 command: WHILE $@13 bool_exp $@14 DO commands END .

    $default  reduce using rule 35 (command)


state 104

   32 command: IF bool_exp $@10 THEN commands $@11 ELSE $@12 . commands FI

    $default  reduce using rule 23 (commands)

    commands  go to state 105


state 105

   24 commands: commands . command ';'
   32 command: IF bool_exp $@10 THEN commands $@11 ELSE $@12 commands . FI

    IDENTIFIER  shift, and go to state 40
    IF          shift, and go to state 41
    WHILE       shift, and go to state 42
    Procedure   shift, and go to state 43
    SKIP        shift, and go to state 44
    FI          shift, and go to state 106
    READ        shift, and go to state 46
    WRITE       shift, and go to state 47

    command  go to state 48


state 106

   32 command: IF bool_exp $@10 THEN commands $@11 ELSE $@12 commands FI .

    $default  reduce using rule 32 (command)
